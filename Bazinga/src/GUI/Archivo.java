/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import java.awt.Color;
import java.awt.Font;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JOptionPane;
import org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;
import org.fife.ui.rsyntaxtextarea.SyntaxConstants;
import org.fife.ui.rtextarea.RTextScrollPane;

/**
 *
 * @author julio
 */
public class Archivo extends javax.swing.JPanel {

    //variables para la zona el texto.
    private RSyntaxTextArea textArea;
    private RTextScrollPane sp;
    private String ruta;

    //Variables para abrir y escribir archivos
    FileReader fr = null;
    BufferedReader br = null;
    FileWriter fichero = null;
    PrintWriter pw = null;

    /**
     * Creates new form Archivo
     * @param file
     */
    public Archivo(File file) {
        initComponents();
        initPane();
        abrir(file);
    }

    private void initPane() {
        textArea = new RSyntaxTextArea();
        textArea.setCodeFoldingEnabled(true);
        textArea.setSyntaxEditingStyle(SyntaxConstants.SYNTAX_STYLE_JAVA);
        sp = new RTextScrollPane();
        textArea.setForeground(Color.white);
        textArea.setBackground(new Color(55, 55, 55));
        textArea.setFont(new Font("Dialog", Font.PLAIN, 17));
        textArea.setCurrentLineHighlightColor(new Color(135, 80, 142));
        sp = new RTextScrollPane(textArea);
        this.add(sp);
    }

    public void cerrar() {
        this.textArea.setText("");
        try {
            ruta = null;
            fr.close();
        } catch (IOException ex2) {
            System.err.println("Error: " + ex2.getMessage());
        }
    }

    private void abrir(File file) {
        try {
            fr = new FileReader(file);
            br = new BufferedReader(fr);
            this.textArea.setText("");
            String linea;
            while ((linea = br.readLine()) != null) {
                this.textArea.append(linea + "\n");
            }
            ruta = file.getAbsolutePath();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, "Error al abrir el archivo:\n" + ex.getMessage());
            this.textArea.setText("");
            try {
                fr.close();
            } catch (IOException ex2) {
                System.err.println("Error: " + ex2.getMessage());
            }
        }
    }

    public void guardar() {
        try {
            fichero = new FileWriter(ruta);
            pw = new PrintWriter(fichero);
            String text = textArea.getText();
            pw.print(text);
            JOptionPane.showMessageDialog(this, "Documento guardado.");
        } catch (IOException ex) {
            System.err.println("Error: " + ex.getMessage());
        } finally {
            try {
                if (null != fichero) {
                    fichero.close();
                }
            } catch (IOException e2) {
                System.err.println("Error: " + e2.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
